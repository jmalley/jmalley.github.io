---
layout: post
title:  "Total Noob"
date:   2014-06-17 12:37
categories: learning rails
---

I made a basic mistake today that eluded me for way too long. I have a list of movies, with a search field at the top. When I try to search for something, the page would refresh but look exactly the same. No errors, but the list of movies did not change to one that matched my search term. The bug would be obvious to someone more experienced, but I didn't find it until after hours of inspecting, tweaking, and testing various aspects of my controllers and routes. Here's the bug:
<!--more-->
{% highlight ruby %}
<% Movie.all.each do |movie| %>
  <h3><em><%= movie.title %></em> (<%= movie.year_released.to_s %>)</h3>
  <p><%= movie.description %> <%= link_to "EDIT", edit_movie_path(movie) %></p>
<% end %>
{% endhighlight %}

My list of movies was generated by listing all of the Movie objects in the database. This isn't a bad thing, necessarily, and is a holdover instict from learning pure ruby. The problem with this is that it's not taking its queues about what to display from the controller, so it doesn't change to the search results properly. Here's the index action in the controller:

{% highlight ruby %}
def index
  @movies = Movie.search(params[:q]).order("created_at DESC") || Movie.all
end
{% endhighlight %}

So that means the index page should take the @movies instance variable, since that's the one being conditionally set here. 

{% highlight ruby %}
<% @movies.each do |movie| %>
  <h3><em><%= movie.title %></em> (<%= movie.year_released.to_s %>)</h3>
  <p><%= movie.description %> <%= link_to "EDIT", edit_movie_path(movie) %></p>
<% end %>
{% endhighlight %}

Works like a charm!